import { GetServerSideProps, InferGetServerSidePropsType, NextPage } from 'next';
import Head from 'next/head';

import React from 'react';

import ThingCard from '@/components/Home/ThingCard';
import clsx from 'clsx';

import prisma from '@/utils/prisma';

import { authOptions } from '@/pages/api/auth/[...nextauth]';
import { getServerSession } from 'next-auth/next';
import { Thing } from '@prisma/client';
import LendThingCard from '@/components/LendThingCard';

export const getServerSideProps: GetServerSideProps<{ things: (Thing & {
  owner: {
      name: string | null;
      email: string | null;
      image: string | null;
  };
  images: {
      url: string;
      caption: string;
  }[];
})[] }> = async (context) => {
  const session = await getServerSession(context.req, context.res, authOptions);

  if (!session) {
    return {
      redirect: {
        destination: '/',
        permanent: false,
      },
    };
  }

  const myThings = await prisma.thing.findMany({
    where: {
      ownerId: session?.user?.id ?? '',
    },
    include: {
      owner: {
        select: {
          name: true,
          email: true,
          image: true,
        },
      },
      images: {
        select: {
          url: true,
          caption: true,
        },
      },
    },
  });

  return {
    props: {
      things: myThings,
    },
  };
};
// eslint-disable-next-line no-unused-vars
const MyThingsPage: NextPage<
  InferGetServerSidePropsType<typeof getServerSideProps>
> = ({ things }: InferGetServerSidePropsType<typeof getServerSideProps>) => (
  <>
    <Head>
      <title>My Things | Rent Thing Now</title>
      <meta
        name="description"
        content="Generated by create next app"
      />
      <meta
        name="viewport"
        content="width=device-width, initial-scale=1"
      />
      <link
        rel="icon"
        href="/favicon.ico"
      />
    </Head>
    <div
      className={
        clsx([
          'grid',
          'grid-flow-row-dense',
          'md:grid-cols-2',
          'lg:grid-cols-3',
          'xl:grid-cols-4',
          'sm:mx-auto',
          'max-w-screen-2xl',
          'my-8',
        ])
      }
    >
      <LendThingCard />
      {things?.map((thing) => (
        <ThingCard
          key={thing.id}
          thing={thing}
        />
      ))}
    </div>
  </>
);

export default MyThingsPage;
